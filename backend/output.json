{"summary":"This smart contract is designed to be an Ethereum-based token that represents a wrapped version of Evmos tokens. The purpose of this contract is to enable the seamless usage of Evmos tokens on the Ethereum network, making it easier for users to interact with Ethereum-based dApps and platforms.\n\nThe Wrapped Evmos (WEVMOS) contract has a few key features:\n\n1. The name, symbol, and decimals of the token are set to \"Wrapped Evmos,\" \"WEVMOS,\" and 18 respectively. This makes it clear to users what they're dealing with and helps to standardize decimals across various platforms.\n\n2. The contract implements the familiar ERC20 functions such as `approve`, `transfer`, `transferFrom`, which allow users to manage their token balances and grant allowances to other smart contracts and addresses.\n\n3. The `deposit` function allows users to deposit Evmos tokens into the smart contract and receive an equal amount of Wrapped Evmos tokens as a representation of their deposited tokens. This is done by sending a transaction to the `deposit()` function. The contract also includes a fallback function that calls the `deposit` function when Ether is sent directly to the contract address.\n\n4. The `withdraw` function enables users to withdraw their Wrapped Evmos tokens and receive an equal amount of Evmos tokens in return. This is essential for users who want to move their tokens back to the native Evmos network.\n\n5. The `totalSupply` function calculates the total supply of Wrapped Evmos tokens by returning the balance of the contract itself, ensuring that the supply is always backed 1:1 by the deposited Evmos tokens.\n\nFor non-technical users, this smart contract allows them to easily participate in the Ethereum ecosystem using their Evmos tokens by converting them into Wrapped Evmos tokens. This would enable users to interact with Ethereum-based decentralized applications (dApps) and platforms without having to deal with the complications of token swaps or cross-chain transactions.\n\nDevelopers looking to integrate Wrapped Evmos tokens into their dApps or platforms can interact with the contract using the standard ERC20 functions provided. This seamless integration makes it easy for developers to support both Evmos and Ethereum ecosystems in their applications.","ethers":"1. Get the total supply of WEVMOS9 tokens\n```javascript\nconst WEVMOS9Contract = await ethers.getContractAt('WEVMOS9', 'WEVMOS9_CONTRACT_ADDRESS');\nconst totalSupply = await WEVMOS9Contract.totalSupply();\nconsole.log(`Total supply of WEVMOS9 tokens:`, ethers.utils.formatUnits(totalSupply, 'ether'));\n```\n\n2. Get the balance of a user's WEVMOS9 tokens\n```javascript\nconst userAddress = 'USER_ADDRESS';\nconst userBalance = await WEVMOS9Contract.balanceOf(userAddress);\nconsole.log(`User's balance of WEVMOS9 tokens:`, ethers.utils.formatUnits(userBalance, 'ether'));\n```\n\n3. Deposit EVMOS into WEVMOS9\n```javascript\nconst depositAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.deposit({ value: depositAmount });\n```\n\n4. Withdraw EVMOS from WEVMOS9\n```javascript\nconst withdrawAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.withdraw(withdrawAmount);\n```\n\n5. Approve the allowance of another address\n```javascript\nconst spenderAddress = 'SPENDER_ADDRESS';\nconst approveAmount = ethers.utils.parseUnits('10', 'ether');\nawait WEVMOS9Contract.approve(spenderAddress, approveAmount);\n```\n\n6. Transfer WEVMOS9 tokens to another address\n```javascript\nconst recipientAddress = 'RECIPIENT_ADDRESS';\nconst transferAmount = ethers.utils.parseUnits('5', 'ether');\nawait WEVMOS9Contract.transfer(recipientAddress, transferAmount);\n```\n\n7. Transfer WEVMOS9 tokens from an approved address\n```javascript\nconst senderAddress = 'SENDER_ADDRESS';\nconst recipientAddress = 'RECIPIENT_ADDRESS';\nconst transferAmount = ethers.utils.parseUnits('5', 'ether');\nawait WEVMOS9Contract.transferFrom(senderAddress, recipientAddress, transferAmount);\n```","wagmi":"1. Get the total supply of WEVMOS9 tokens\n```javascript\nconst { data: totalSupply } = useContractRead({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'totalSupply'\n});\nconsole.log(`Total supply of WEVMOS9 tokens:`, totalSupply ? ethers.utils.formatUnits(totalSupply, 'ether') : 'Loading...');\n```\n\n2. Deposit Evmos into the WEVMOS9 contract\n```javascript\nconst amountToDeposit = ethers.utils.parseUnits('1', 'ether');\nconst { send: deposit } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'deposit',\n    inputValue: amountToDeposit\n});\n\n// To send the deposit transaction, call:\n// deposit();\n```\n\n3. Withdraw Evmos from the WEVMOS9 contract\n```javascript\nconst amountToWithdraw = ethers.utils.parseUnits('1', 'ether');\nconst { send: withdraw } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'withdraw',\n    args: [amountToWithdraw],\n});\n\n// To send the withdraw transaction, call:\n// withdraw();\n```\n\n4. Approve a spender to use your WEVMOS9 tokens\n```javascript\nconst spender = 'SPENDER_ADDRESS';\nconst amountToAllow = ethers.utils.parseUnits('10', 'ether');\nconst { send: approveSpender } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'approve',\n    args: [spender, amountToAllow],\n});\n\n// To send the approve transaction, call:\n// approveSpender();\n```\n\n5. Transfer WEVMOS9 tokens to another address\n```javascript\nconst destination = 'DESTINATION_ADDRESS';\nconst amountToTransfer = ethers.utils.parseUnits('10', 'ether');\nconst { send: transfer } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'transfer',\n    args: [destination, amountToTransfer],\n});\n\n// To send the transfer transaction, call:\n// transfer();\n```\n\n6. Transfer WEVMOS9 tokens from one address to another\n```javascript\nconst source = 'SOURCE_ADDRESS';\nconst destination = 'DESTINATION_ADDRESS';\nconst amountToTransfer = ethers.utils.parseUnits('10', 'ether');\nconst { send: transferFrom } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'transferFrom',\n    args: [source, destination, amountToTransfer],\n});\n\n// To send the transferFrom transaction, call:\n// transferFrom();\n```","tokens":[{"name":"EVMOS","value":"4393708.548237260818994709","fiatValue":"$646,127.44","imageUrl":"https://www.datocms-assets.com/86369/1669931890-evmos.png"}],"metadata":{"Contract Name":"WEVMOS9","Contract Address":"0xD494...d517","Contract Type":"ERC-20","Tx Hash":"0xe13b...c5e8","Creator":"0x0000...58A3","Transactions":"126,617","Created At":"2022-04-27 10:58:16","Last Execute At":"2023-05-28 19:06:47","Token Name":"Wrapped Evmos","Symbol":"WEVMOS","Decimals":"18","Total Supply":"4.00","Name":"WEVMOS9","Compiler Version":"v0.5.17"},"abi":"[{\"name\":\"Approval\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Deposit\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Withdrawal\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"allowance\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"approve\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"balanceOf\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"decimals\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint8\",\"type\":\"uint8\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"deposit\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"},{\"name\":\"name\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"symbol\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"totalSupply\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transferFrom\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"withdraw\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"true\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"}]","functions":["Approval","Deposit","Transfer","Withdrawal","allowance","approve","balanceOf","decimals","deposit","name","symbol","totalSupply","transfer","transferFrom","withdraw","true"]}