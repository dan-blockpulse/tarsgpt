{"summary":"This smart contract is designed to be an ERC20-like token implementation for the EVMOS blockchain. It represents a wrapped version of the native EVMOS token, and it enables users to interact with this wrapped token version within the EVMOS ecosystem.\n\nThe smart contract declares a name \"Wrapped Evmos,\" a symbol \"WEVMOS,\" and defines 18 decimals for token precision. It also includes events for handling approvals, transfers, deposits, and withdrawals.\n\nThe contract maintains two mappings for token balances and allowances. One mapping stores the balance of each user based on their address, while the other stores approved allowances for a particular user to spend on behalf of another user.\n\nDeposit and withdrawal functions enable users to convert EVMOS tokens into Wrapped EVMOS tokens. The deposit() function is called when a user sends EVMOS to the contract, incrementing their wrapped token balance. The withdraw() function allows users to redeem their wrapped tokens for EVMOS tokens by reducing their wrapped balance and sending the corresponding amount of EVMOS back to the user.\n\nThe totalSupply() function returns the total supply of Wrapped EVMOS tokens, calculated as the contract's balance in EVMOS.\n\nThe approve() and allowance mechanism allows users to grant other users the permission to spend a specified amount of tokens on their behalf. This can be useful in scenarios like decentralized exchanges or contract-to-contract interactions.\n\nThe transfer() function simply calls the more general transferFrom() function, initiating a token transfer from the sender's address to the specified destination address. The transferFrom() function includes checks to ensure that the source user has sufficient balance and allowances before carrying out the transfer.\n\nThis smart contract is useful to blockchain users because it standardizes the process of token management and makes it easy for other developers to interact with the wrapped token. Developers can use the functions provided by the contract to build dApps and other financial applications involving Wrapped EVMOS tokens. For example, these tokens can be used in decentralized lending platforms, yield farming programs, or liquidity pools on decentralized exchanges.","ethers":"1. Get the total supply of WEVMOS9 tokens\n```javascript\nconst WEVMOS9Contract = await ethers.getContractAt('WEVMOS9', 'WEVMOS9_CONTRACT_ADDRESS');\nconst totalSupply = await WEVMOS9Contract.totalSupply();\nconsole.log(`Total supply of WEVMOS9 tokens:`, ethers.utils.formatUnits(totalSupply, 'ether'));\n```\n\n2. Deposit tokens to the WEVMOS9 contract\n```javascript\nconst depositAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.deposit({ value: depositAmount });\n```\n\n3. Withdraw tokens from the WEVMOS9 contract\n```javascript\nconst withdrawAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.withdraw(withdrawAmount);\n```\n\n4. Get the balance of a user's WEVMOS9 tokens\n```javascript\nconst userAddress = 'USER_ADDRESS';\nconst userBalance = await WEVMOS9Contract.balanceOf(userAddress);\nconsole.log(`User's balance of WEVMOS9 tokens:`, ethers.utils.formatUnits(userBalance, 'ether'));\n```\n\n5. Approve tokens to be spent by another address\n```javascript\nconst spenderAddress = 'SPENDER_ADDRESS';\nconst approvalsAmount = ethers.utils.parseUnits('2', 'ether');\nawait WEVMOS9Contract.approve(spenderAddress, approvalsAmount);\n```\n\n6. Transfer tokens to another address\n```javascript\nconst destinationAddress = 'DESTINATION_ADDRESS';\nconst transferAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.transfer(destinationAddress, transferAmount);\n```\n\n7. Transfer tokens from an allowed address\n```javascript\nconst sourceAddress = 'SOURCE_ADDRESS';\nconst destinationAddress = 'DESTINATION_ADDRESS';\nconst transferAmount = ethers.utils.parseUnits('1', 'ether');\nawait WEVMOS9Contract.transferFrom(sourceAddress, destinationAddress, transferAmount);\n```","wagmi":"1. Get the total supply of WEVMOS9 tokens\n```javascript\nconst { data: totalSupply } = useContractRead({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'totalSupply'\n});\nconsole.log(`Total supply of WEVMOS9 tokens:`, totalSupply ? ethers.utils.formatUnits(totalSupply, 'ether') : 'Loading...');\n\n```\n2. Deposit EVMOS to get WEVMOS9 tokens\n```javascript\nconst depositAmount = ethers.utils.parseUnits('1', 'ether');\nconst { send: deposit } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'deposit',\n    value: depositAmount,\n});\n\n// To send the deposit transaction, call:\n// deposit();\n\n```\n3. Withdraw EVMOS from wrapped WEVMOS9 tokens\n```javascript\nconst withdrawAmount = ethers.utils.parseUnits('1', 'ether');\nconst { send: withdraw } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'withdraw',\n    args: [withdrawAmount],\n});\n\n// To send the withdraw transaction, call:\n// withdraw();\n\n```\n4. Approve a spender to use your WEVMOS9 tokens\n```javascript\nconst spender = 'SPENDER_ADDRESS';\nconst amountToAllow = ethers.utils.parseUnits('10', 'ether');\nconst { send: approveSpender } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'approve',\n    args: [spender, amountToAllow],\n});\n\n// To send the approve transaction, call:\n// approveSpender();\n\n```\n5. Transfer WEVMOS9 tokens to another address\n```javascript\nconst recipient = 'RECIPIENT_ADDRESS';\nconst amountToSend = ethers.utils.parseUnits('5', 'ether');\nconst { send: transferTokens } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'transfer',\n    args: [recipient, amountToSend],\n});\n\n// To send the transfer transaction, call:\n// transferTokens();\n\n```\n6. Transfer WEVMOS9 tokens from one address to another (using allowance)\n```javascript\nconst source = 'SOURCE_ADDRESS';\nconst destination = 'DESTINATION_ADDRESS';\nconst amountToTransfer = ethers.utils.parseUnits('3', 'ether');\nconst { send: transferFrom } = useContractWrite({\n    address: 'WEVMOS9_CONTRACT_ADDRESS',\n    abi: WEVMOS9.abi,\n    functionName: 'transferFrom',\n    args: [source, destination, amountToTransfer],\n});\n\n// To send the transferFrom transaction, call:\n// transferFrom();\n\n```","tokens":[{"name":"EVMOS","value":"4408227.477483590108847326","fiatValue":"$640,699.38","imageUrl":"https://www.datocms-assets.com/86369/1669931890-evmos.png"}],"metadata":{"Contract Name":"WEVMOS9","Contract Address":"0xD494...d517","Contract Type":"ERC-20","Tx Hash":"0xe13b...c5e8","Creator":"0x0000...58A3","Transactions":"126,619","Created At":"2022-04-27 10:58:16","Last Execute At":"2023-05-28 21:44:23","Token Name":"Wrapped Evmos","Symbol":"WEVMOS","Decimals":"18","Total Supply":"4.00","Name":"WEVMOS9","Compiler Version":"v0.5.17"},"abi":"[{\"name\":\"Approval\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Deposit\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Withdrawal\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"allowance\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"approve\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"balanceOf\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"decimals\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint8\",\"type\":\"uint8\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"deposit\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"},{\"name\":\"name\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"symbol\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"totalSupply\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transferFrom\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"withdraw\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"true\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"}]","functions":["Approval","Deposit","Transfer","Withdrawal","allowance","approve","balanceOf","decimals","deposit","name","symbol","totalSupply","transfer","transferFrom","withdraw","true"]}