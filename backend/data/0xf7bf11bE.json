{"summary":"This smart contract is designed to be a token with automated liquidity and rewards distribution called Evoki. The token code is based on the BEP20 standard and has additional functionality for fees, limits, and dividends.\n\nThe contract uses SafeMath library to handle arithmetic operations safely, preventing overflows or underflows. The contract also includes interfaces for communicating with external contracts like IBEP20 (for interacting with tokens), IDEXFactory (for creating a trading pair on a decentralized exchange), IDEXRouter (for swapping and providing liquidity), and IDividendDistributor (for managing dividends distribution).\n\nThe DividendDistributor contract is responsible for distributing dividends to token holders. It takes a portion of transaction fees and uses the IDEXRouter to swap a part of it into the RewardToken (set as a variable in the code). The dividends are then distributed to the shareholders based on their token holdings.\n\nThe Evoki token contract inherits from both the IBEP20 and Auth contracts. It has a customizable tax system that allows authorized addresses to set fees for liquidity, rewards, and marketing. These fees are deducted from each transaction, and a portion goes to the liquidity pool, RewardToken dividends, and marketing wallets. Additionally, there's an extra fee applied when selling the token.\n\nSome addresses can be exempt from fees, dividend distribution, and transaction limits. Moreover, the contract owner can change the maximum transaction amount, wallet limit, swap settings, and liquidity provider addresses, offering flexibility in token management.\n\nInitially, the contract owner has control over the token's trading status, and trading can only commence when the owner decides to allow it.\n\nTo enable the automatic liquidity and rewards features, the contract connects to a decentralized exchange using the IDEXRouter, creating a token pair for trading, and swapping tokens for the router's WETH token. It executes these swap operations and adds liquidity based on certain conditions set within the contract.\n\nIn summary, this smart contract manages the Evoki token, which has automated liquidity, rewards distribution, and fee collection features. It can be used by other developers to create their customized version with desired fees and settings. Also, it provides ways for users to claim their rewards and potentially earn profits while holding the token.","ethers":"1. Get total supply of Evoki tokens\n```javascript\nconst EvokiContract = await ethers.getContractAt('Evoki', 'EVOKI_CONTRACT_ADDRESS');\nconst totalSupply = await EvokiContract.totalSupply();\nconsole.log(`Total supply of Evoki tokens:`, ethers.utils.formatUnits(totalSupply, 'ether'));\n```\n\n2. Get the balance of a user's Evoki tokens\n```javascript\nconst userAddress = 'USER_ADDRESS';\nconst userBalance = await EvokiContract.balanceOf(userAddress);\nconsole.log(`User's balance of Evoki tokens:`, ethers.utils.formatUnits(userBalance, 'ether'));\n```\n\n3. Transfer Evoki tokens from one address to another\n```javascript\nconst recipientAddress = 'RECIPIENT_ADDRESS';\nconst transferAmount = ethers.utils.parseUnits('AMOUNT_TO_TRANSFER', 'ether');\nconst transferTx = await EvokiContract.transfer(recipientAddress, transferAmount);\nawait transferTx.wait();\nconsole.log(`Transferred ${AMOUNT_TO_TRANSFER} Evoki tokens to:`, recipientAddress);\n```\n\n4. Approve a spender to use Evoki tokens on behalf of the token owner\n```javascript\nconst spenderAddress = 'SPENDER_ADDRESS';\nconst allowanceAmount = ethers.utils.parseUnits('ALLOWANCE_AMOUNT', 'ether');\nconst approveTx = await EvokiContract.approve(spenderAddress, allowanceAmount);\nawait approveTx.wait();\nconsole.log(`Approved ${ALLOWANCE_AMOUNT} Evoki tokens for spender:`, spenderAddress);\n```\n\n5. Check the allowance given to a spender by the token owner\n```javascript\nconst tokenOwner = 'TOKEN_OWNER_ADDRESS';\nconst allowance = await EvokiContract.allowance(tokenOwner, spenderAddress);\nconsole.log(`Spender has an allowance of:`, ethers.utils.formatUnits(allowance, 'ether'), ' Evoki tokens');\n```\n\n6. Transfer Evoki tokens from an approved address to a recipient\n```javascript\nconst transferAmountFromApproved = ethers.utils.parseUnits('TRANSFER_AMOUNT', 'ether');\nconst transferFromTx = await EvokiContract.transferFrom(tokenOwner, recipientAddress, transferAmountFromApproved);\nawait transferFromTx.wait();\nconsole.log(`Transferred ${TRANSFER_AMOUNT} Evoki tokens from approved address to:`, recipientAddress);\n```","wagmi":"1. Get the total supply of Evoki tokens\n```javascript\nconst { data: totalSupply } = useContractRead({\n    address: 'EVOKI_CONTRACT_ADDRESS',\n    abi: Evoki.abi,\n    functionName: 'totalSupply'\n});\nconsole.log(`Total supply of Evoki tokens:`, totalSupply ? ethers.utils.formatUnits(totalSupply, 'ether') : 'Loading...');\n\n```\n\n2. Get the balance of a specific address\n```javascript\nconst { data: balance } = useContractRead({\n    address: 'EVOKI_CONTRACT_ADDRESS',\n    abi: Evoki.abi,\n    functionName: 'balanceOf',\n    args: ['ADDRESS_TO_CHECK']\n});\nconsole.log(`Balance of the address:`, balance ? ethers.utils.formatUnits(balance, 'ether') : 'Loading...');\n\n```\n\n3. Approve a spender to use your Evoki tokens\n```javascript\nconst spender = 'SPENDER_ADDRESS';\nconst amountToAllow = ethers.utils.parseUnits('10', 'ether');\nconst { send: approveSpender } = useContractWrite({\n    address: 'EVOKI_CONTRACT_ADDRESS',\n    abi: Evoki.abi,\n    functionName: 'approve',\n    args: [spender, amountToAllow],\n});\n\n// To send the approve transaction, call:\n// approveSpender();\n\n```\n\n4. Transfer tokens to another address\n```javascript\nconst recipient = 'RECIPIENT_ADDRESS';\nconst amountToSend = ethers.utils.parseUnits('5', 'ether');\nconst { send: transferTokens } = useContractWrite({\n    address: 'EVOKI_CONTRACT_ADDRESS',\n    abi: Evoki.abi,\n    functionName: 'transfer',\n    args: [recipient, amountToSend],\n});\n\n// To send the transfer transaction, call:\n// transferTokens();\n\n```\n\n5. Claim Evoki token dividends\n```javascript\nconst { send: claimDividends } = useContractWrite({\n    address: 'DIVIDEND_DISTRIBUTOR_ADDRESS', // Replace with DividendDistributor contract address\n    abi: DividendDistributor.abi,\n    functionName: 'claim'\n});\n\n// To send the claim transaction, call:\n// claimDividends();\n\n```","tokens":[{"name":"$EVOKI","value":"3555.379937237270393806","fiatValue":"$0.00","imageUrl":"https://logos.covalenthq.com/tokens/9001/0xf7bf11bea084a44df6a2a2049fedb5bb88fba109.png"}],"metadata":{"Contract Name":"Evoki","Contract Address":"0xf7bf...A109","Contract Type":"ERC-20","Tx Hash":"0x1b89...5434","Creator":"0x0484...eBe0","Transactions":"143","Created At":"2022-04-28 00:12:32","Last Execute At":"2022-10-28 13:44:03","Token Name":"Evoki","Symbol":"$EVOKI","Decimals":"18","Total Supply":"1.00","Name":"Evoki","Compiler Version":"v0.7.4"},"abi":"[{\"name\":\"nonpayable\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Approval\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"AutoLiquify\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"OwnershipTransferred\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"Transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"_maxTxAmount\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"_walletMax\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"allowance\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"approve\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"approveMax\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"authorize\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"autoLiquidityReceiver\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"balanceOf\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeDistributionCriteria\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeDistributorSettings\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeFeeReceivers\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeFees\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeIsDividendExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeIsFeeExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeIsTxLimitExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeRestrictWhales\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeSwapBackSettings\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeTxLimit\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"changeWalletLimit\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"claim\",\"stateMutability\":\"\",\"outputs\":[],\"inputs\":[],\"type\":\"function\"},{\"name\":\"decimals\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint8\",\"type\":\"uint8\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"dividendDistributor\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"extraFeeOnSell\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"getCirculatingSupply\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"getOwner\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"isAuthorized\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"isDividendExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"isFeeExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"isOwner\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"isTxLimitExempt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"launchedAt\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"liquidityFee\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"marketingFee\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"marketingWallet\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"name\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"pair\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"restrictWhales\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"rewardsFee\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"router\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"swapAndLiquifyByLimitOnly\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"swapAndLiquifyEnabled\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"swapThreshold\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"symbol\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"string\",\"type\":\"string\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"totalFee\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"totalFeeIfSelling\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"totalSupply\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"tradingOpen\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"tradingStatus\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transfer\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transferFrom\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"type\":\"bool\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"transferOwnership\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"},{\"name\":\"unauthorize\",\"stateMutability\":\"\",\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\"}],\"inputs\":[],\"type\":\"function\"}]","functions":["nonpayable","Approval","AutoLiquify","OwnershipTransferred","Transfer","_maxTxAmount","_walletMax","allowance","approve","approveMax","authorize","autoLiquidityReceiver","balanceOf","changeDistributionCriteria","changeDistributorSettings","changeFeeReceivers","changeFees","changeIsDividendExempt","changeIsFeeExempt","changeIsTxLimitExempt","changeRestrictWhales","changeSwapBackSettings","changeTxLimit","changeWalletLimit","claim","decimals","dividendDistributor","extraFeeOnSell","getCirculatingSupply","getOwner","isAuthorized","isDividendExempt","isFeeExempt","isOwner","isTxLimitExempt","launchedAt","liquidityFee","marketingFee","marketingWallet","name","pair","restrictWhales","rewardsFee","router","swapAndLiquifyByLimitOnly","swapAndLiquifyEnabled","swapThreshold","symbol","totalFee","totalFeeIfSelling","totalSupply","tradingOpen","tradingStatus","transfer","transferFrom","transferOwnership","unauthorize"]}