{
  "message": {
    "role": "assistant",
    "content": "1. Get the total supply of WBNB tokens\n```javascript\nconst { data: totalSupply } = useContractRead({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'totalSupply'\n});\nconsole.log(`Total supply of WBNB tokens:`, totalSupply ? ethers.utils.formatUnits(totalSupply, 'ether') : 'Loading...');\n```\n\n2. Get the balance of a user's WBNB tokens\n```javascript\nconst userAddress = 'USER_ADDRESS';\nconst { data: userBalance } = useContractRead({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'balanceOf',\n    args: [userAddress],\n});\n\nconsole.log(`User's balance of WBNB tokens:`, userBalance ? ethers.utils.formatUnits(userBalance, 'ether') : 'Loading...');\n```\n\n3. Approve a spender to use your WBNB tokens\n```javascript\nconst spender = 'SPENDER_ADDRESS';\nconst amountToAllow = ethers.utils.parseUnits('10', 'ether');\nconst { send: approveSpender } = useContractWrite({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'approve',\n    args: [spender, amountToAllow],\n});\n\n// To send the approve transaction, call:\n// approveSpender();\n```\n\n4. Transfer WBNB tokens to another address\n```javascript\nconst destinationAddress = 'DESTINATION_ADDRESS';\nconst amountToTransfer = ethers.utils.parseUnits('5', 'ether');\nconst { send: transferTokens } = useContractWrite({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'transfer',\n    args: [destinationAddress, amountToTransfer],\n});\n\n// To send the transfer transaction, call:\n// transferTokens();\n```\n\n5. Deposit BNB into wrapped BNB contract\n```javascript\nconst amountToDeposit = ethers.utils.parseUnits('1', 'ether');\nconst { send: deposit } = useContractWrite({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'deposit',\n    etherValue: amountToDeposit,\n});\n\n// To send the deposit transaction, call:\n// deposit();\n```\n\n6. Withdraw BNB from the wrapped BNB contract\n```javascript\nconst amountToWithdraw = ethers.utils.parseUnits('1', 'ether');\nconst { send: withdraw } = useContractWrite({\n    address: 'WBNB_CONTRACT_ADDRESS',\n    abi: WBNB.abi,\n    functionName: 'withdraw',\n    args: [amountToWithdraw],\n});\n\n// To send the withdraw transaction, call:\n// withdraw();\n```"
  },
  "finish_reason": "stop",
  "index": 0
}